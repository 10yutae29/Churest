/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 Flower_Orange_Small.glb -t
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { glbs } from '@/public/assets/glb';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    ['calendula-flower_green_0']: THREE.Mesh;
    ['calendula-flower_orange_0']: THREE.Mesh;
  };
  materials: {
    ['green.001']: THREE.MeshStandardMaterial;
    orange: THREE.MeshStandardMaterial;
  };
};

export function OrangeFlower(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(glbs.flower_orange_glb) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group
        position={[0.72, 1.15, 0.5]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.71}
      >
        <mesh
          geometry={nodes['calendula-flower_green_0'].geometry}
          material={materials['green.001']}
          castShadow
        />
        <mesh
          geometry={nodes['calendula-flower_orange_0'].geometry}
          material={materials.orange}
          castShadow
        />
      </group>
    </group>
  );
}

// useGLTF.preload(glbs.flower_orange_glb);
