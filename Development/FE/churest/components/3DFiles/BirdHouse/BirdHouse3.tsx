/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 BirdHouse3.glb -t
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { glbs } from '@/public/assets/glb';

type GLTFResult = GLTF & {
  nodes: {
    큐브008: THREE.Mesh;
    큐브008_1: THREE.Mesh;
    큐브008_2: THREE.Mesh;
    큐브008_3: THREE.Mesh;
  };
  materials: {
    ['매테리얼.001']: THREE.MeshStandardMaterial;
    ['매테리얼.002']: THREE.MeshStandardMaterial;
    ['매테리얼.003']: THREE.MeshStandardMaterial;
    ['매테리얼.006']: THREE.MeshStandardMaterial;
  };
};

export function BirdHouse3(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(glbs.birdhouse_3_glb) as GLTFResult;
  return (
    <group {...props} dispose={null} scale={0.5}>
      <group
        position={[-0.02, 2.6, 0]}
        rotation={[0, 0, 3.14]}
        scale={[0.68, 0.7, 0.47]}
      >
        <mesh
          geometry={nodes.큐브008.geometry}
          material={materials['매테리얼.001']}
          castShadow
          receiveShadow
        />
        <mesh
          geometry={nodes.큐브008_1.geometry}
          material={materials['매테리얼.002']}
          castShadow
          receiveShadow
        />
        <mesh
          geometry={nodes.큐브008_2.geometry}
          material={materials['매테리얼.003']}
          castShadow
          receiveShadow
        />
        <mesh
          geometry={nodes.큐브008_3.geometry}
          material={materials['매테리얼.006']}
          castShadow
          receiveShadow
        />
      </group>
    </group>
  );
}

useGLTF.preload(glbs.birdhouse_3_glb);
