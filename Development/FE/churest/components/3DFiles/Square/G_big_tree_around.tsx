/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 g_big_tree_around.glb -t
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { glbs } from '@/public/assets/glb';

type GLTFResult = GLTF & {
  nodes: {
    Mesh089: THREE.Mesh;
    Mesh089_1: THREE.Mesh;
    Mesh089_2: THREE.Mesh;
    Mesh089_3: THREE.Mesh;
  };
  materials: {
    ['Material.057']: THREE.MeshStandardMaterial;
    ['Material.002']: THREE.MeshStandardMaterial;
    ['Material.004']: THREE.MeshStandardMaterial;
    ['Material.035']: THREE.MeshStandardMaterial;
  };
};

export function G_big_tree_around(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(
    glbs.g_big_tree_around_glb
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group
        position={[4.96, 1.14, -13.12]}
        rotation={[0, 1.47, 0]}
        scale={0.89}
      >
        <mesh
          geometry={nodes.Mesh089.geometry}
          material={materials['Material.057']}
          castShadow
        />
        <mesh
          geometry={nodes.Mesh089_1.geometry}
          material={materials['Material.002']}
          castShadow
        />
        <mesh
          geometry={nodes.Mesh089_2.geometry}
          material={materials['Material.004']}
          castShadow
        />
        <mesh
          geometry={nodes.Mesh089_3.geometry}
          material={materials['Material.035']}
          castShadow
        />
      </group>
    </group>
  );
}

useGLTF.preload(glbs.g_big_tree_around_glb);
