/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 g_bridege.glb -t
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { glbs } from '@/public/assets/glb';

type GLTFResult = GLTF & {
  nodes: {
    실린더: THREE.Mesh;
    실린더_1: THREE.Mesh;
    실린더_2: THREE.Mesh;
  };
  materials: {
    ['매테리얼.013']: THREE.MeshStandardMaterial;
    ['매테리얼.008']: THREE.MeshStandardMaterial;
    ['매테리얼.003']: THREE.MeshStandardMaterial;
  };
};

export function G_bridge(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(glbs.g_bridge_glb) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group
        position={[-1.56, 0.86, -3.63]}
        rotation={[-Math.PI, 0, -Math.PI]}
        scale={[-0.09, -0.9, -0.09]}
      >
        <mesh
          geometry={nodes.실린더.geometry}
          material={materials['매테리얼.013']}
          castShadow
        />
        <mesh
          geometry={nodes.실린더_1.geometry}
          material={materials['매테리얼.008']}
          receiveShadow
        />
        <mesh
          geometry={nodes.실린더_2.geometry}
          material={materials['매테리얼.003']}
          castShadow
        />
      </group>
    </group>
  );
}

useGLTF.preload(glbs.g_bridge_glb);
