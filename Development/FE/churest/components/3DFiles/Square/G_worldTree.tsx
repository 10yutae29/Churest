/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 g_worldTree.glb -t
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { glbs } from '@/public/assets/glb';
import { CylinderCollider } from '@react-three/rapier';

type GLTFResult = GLTF & {
  nodes: {
    메쉬001: THREE.Mesh;
    메쉬001_1: THREE.Mesh;
    메쉬001_2: THREE.Mesh;
    메쉬001_3: THREE.Mesh;
    메쉬001_4: THREE.Mesh;
    메쉬001_5: THREE.Mesh;
    메쉬001_6: THREE.Mesh;
    메쉬001_7: THREE.Mesh;
    메쉬001_8: THREE.Mesh;
    메쉬001_9: THREE.Mesh;
    메쉬001_10: THREE.Mesh;
    메쉬001_11: THREE.Mesh;
  };
  materials: {
    ['매테리얼.038']: THREE.MeshStandardMaterial;
    ['매테리얼.039']: THREE.MeshStandardMaterial;
    ['매테리얼.040']: THREE.MeshStandardMaterial;
    ['매테리얼.041']: THREE.MeshStandardMaterial;
    ['매테리얼.042']: THREE.MeshStandardMaterial;
    ['매테리얼.043']: THREE.MeshStandardMaterial;
    ['매테리얼.044']: THREE.MeshStandardMaterial;
    ['매테리얼.045']: THREE.MeshStandardMaterial;
    ['매테리얼.046']: THREE.MeshStandardMaterial;
    ['매테리얼.047']: THREE.MeshStandardMaterial;
    ['매테리얼.048']: THREE.MeshStandardMaterial;
    ['매테리얼.049']: THREE.MeshStandardMaterial;
  };
};

export function G_world_tree(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(glbs.g_world_tree_glb) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group
        position={[-3.22, 11, -12.52]}
        rotation={[0.33, 0.85, 1]}
        scale={[0.84, 0.53, 1.43]}
      >
        <mesh
          geometry={nodes.메쉬001.geometry}
          material={materials['매테리얼.038']}
          castShadow
        />
        <mesh
          geometry={nodes.메쉬001_1.geometry}
          material={materials['매테리얼.039']}
          castShadow
        />
        <mesh
          geometry={nodes.메쉬001_2.geometry}
          material={materials['매테리얼.040']}
          castShadow
        />
        <mesh
          geometry={nodes.메쉬001_3.geometry}
          material={materials['매테리얼.041']}
          castShadow
        />
        <mesh
          geometry={nodes.메쉬001_4.geometry}
          material={materials['매테리얼.042']}
          castShadow
        />
        <mesh
          geometry={nodes.메쉬001_5.geometry}
          material={materials['매테리얼.043']}
          castShadow
        />
        <mesh
          geometry={nodes.메쉬001_6.geometry}
          material={materials['매테리얼.044']}
          castShadow
        />
        <mesh
          geometry={nodes.메쉬001_7.geometry}
          material={materials['매테리얼.045']}
          castShadow
        />
        <mesh
          geometry={nodes.메쉬001_8.geometry}
          material={materials['매테리얼.046']}
          castShadow
        />
        <mesh
          geometry={nodes.메쉬001_9.geometry}
          material={materials['매테리얼.047']}
          castShadow
        />
        <mesh
          geometry={nodes.메쉬001_10.geometry}
          material={materials['매테리얼.048']}
          castShadow
        />
        <mesh
          geometry={nodes.메쉬001_11.geometry}
          material={materials['매테리얼.049']}
          castShadow
        />
      </group>
    </group>
  );
}

useGLTF.preload(glbs.g_world_tree_glb);
